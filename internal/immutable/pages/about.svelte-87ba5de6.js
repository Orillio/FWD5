import{S as N,i as z,s as B,e as o,t as h,k,c as s,a as l,h as m,d as a,m as w,b,g as K,F as e,n as M}from"../chunks/index-2908ee93.js";function Q(F){let r,c,i,d,x,E,t,p,P,D,u,C,S,f,A,O,v,j,J,g,L;return{c(){r=o("section"),c=o("div"),i=o("div"),d=o("h1"),x=h("About me"),E=k(),t=o("div"),p=o("p"),P=h("I'm 19 years old, I'm studying at Innopolis University in the software development track. I like backend and frontend development for web and mobile applications."),D=k(),u=o("p"),C=h(`Good knowledge of C#, Dart, Python.
                    At base level in Java, JS.`),S=k(),f=o("p"),A=h(`Can make a simple layout with the right structure, and create a backend with extensible architecture. Excellent understanding of OOP (I can explain the difference between abstract class and interface).
                    I know a lot of patterns, SOLID principles and know how to use them in the right places. I know a lot of algorithms and data structures, how to implement them and how to estimate the complexity of algorithms. 
                    I have some experience in Django API deployment using Docker.`),O=k(),v=o("p"),j=h("Currently I'm developing mobile apps on Flutter in the team."),J=k(),g=o("p"),L=h("My soft skills include Project Management, Team Leading. Can find vectors for further product development and delegate tasks to achieve the set goal. I work using Scrum methodology."),this.h()},l(I){r=s(I,"SECTION",{class:!0});var y=l(r);c=s(y,"DIV",{class:!0});var T=l(c);i=s(T,"DIV",{class:!0});var _=l(i);d=s(_,"H1",{class:!0});var V=l(d);x=m(V,"About me"),V.forEach(a),E=w(_),t=s(_,"DIV",{class:!0});var n=l(t);p=s(n,"P",{});var G=l(p);P=m(G,"I'm 19 years old, I'm studying at Innopolis University in the software development track. I like backend and frontend development for web and mobile applications."),G.forEach(a),D=w(n),u=s(n,"P",{});var U=l(u);C=m(U,`Good knowledge of C#, Dart, Python.
                    At base level in Java, JS.`),U.forEach(a),S=w(n),f=s(n,"P",{});var $=l(f);A=m($,`Can make a simple layout with the right structure, and create a backend with extensible architecture. Excellent understanding of OOP (I can explain the difference between abstract class and interface).
                    I know a lot of patterns, SOLID principles and know how to use them in the right places. I know a lot of algorithms and data structures, how to implement them and how to estimate the complexity of algorithms. 
                    I have some experience in Django API deployment using Docker.`),$.forEach(a),O=w(n),v=s(n,"P",{});var q=l(v);j=m(q,"Currently I'm developing mobile apps on Flutter in the team."),q.forEach(a),J=w(n),g=s(n,"P",{});var H=l(g);L=m(H,"My soft skills include Project Management, Team Leading. Can find vectors for further product development and delegate tasks to achieve the set goal. I work using Scrum methodology."),H.forEach(a),n.forEach(a),_.forEach(a),T.forEach(a),y.forEach(a),this.h()},h(){b(d,"class","name"),b(t,"class","about_me"),b(i,"class","info"),b(c,"class","container"),b(r,"class","hello_section")},m(I,y){K(I,r,y),e(r,c),e(c,i),e(i,d),e(d,x),e(i,E),e(i,t),e(t,p),e(p,P),e(t,D),e(t,u),e(u,C),e(t,S),e(t,f),e(f,A),e(t,O),e(t,v),e(v,j),e(t,J),e(t,g),e(g,L)},p:M,i:M,o:M,d(I){I&&a(r)}}}function R(F){return[]}class X extends N{constructor(r){super(),z(this,r,R,Q,B,{})}}export{X as default};
